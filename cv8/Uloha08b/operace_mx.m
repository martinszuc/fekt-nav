function [methodinfo,structs,enuminfo,ThunkLibName]=operace_mx
%OPERACE_MX Create structures to define interfaces found in 'operace'.

%This function was generated by loadlibrary.m parser version  on Wed Apr  9 15:13:17 2025
%perl options:'operace.i -outfile=operace_mx.m -thunkfile=operace_thunk_pcwin64.c -header=operace.h'
ival={cell(1,0)}; % change 0 to the actual number of functions to preallocate the data.
structs=[];enuminfo=[];fcnNum=1;
fcns=struct('name',ival,'calltype',ival,'LHS',ival,'RHS',ival,'alias',ival,'thunkname', ival);
MfilePath=fileparts(mfilename('fullpath'));
ThunkLibName=fullfile(MfilePath,'operace_thunk_pcwin64');
% int __stdcall soucet ( int x , int y , int z ); 
fcns.thunkname{fcnNum}='int32int32int32int32Thunk';fcns.name{fcnNum}='soucet'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}={'int32', 'int32', 'int32'};fcnNum=fcnNum+1;
% float __stdcall fpu_op ( int x , float y ); 
fcns.thunkname{fcnNum}='floatint32floatThunk';fcns.name{fcnNum}='fpu_op'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='single'; fcns.RHS{fcnNum}={'int32', 'single'};fcnNum=fcnNum+1;
methodinfo=fcns;