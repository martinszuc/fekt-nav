function [methodinfo,structs,enuminfo,ThunkLibName]=tictoc_mx
%TICTOC_MX Create structures to define interfaces found in 'tictoc'.

%This function was generated by loadlibrary.m parser version  on Wed Apr  9 15:08:05 2025
%perl options:'tictoc.i -outfile=tictoc_mx.m -thunkfile=tictoc_thunk_pcwin64.c -header=tictoc.h'
ival={cell(1,0)}; % change 0 to the actual number of functions to preallocate the data.
structs=[];enuminfo=[];fcnNum=1;
fcns=struct('name',ival,'calltype',ival,'LHS',ival,'RHS',ival,'alias',ival,'thunkname', ival);
MfilePath=fileparts(mfilename('fullpath'));
ThunkLibName=fullfile(MfilePath,'tictoc_thunk_pcwin64');
% int _stdcall _M_toc ( long * a ); 
fcns.thunkname{fcnNum}='int32voidPtrThunk';fcns.name{fcnNum}='_M_toc'; fcns.alias{fcnNum}='M_toc'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}={'longPtr'};fcnNum=fcnNum+1;
% double _stdcall _M_rtoc ( long * a ); 
fcns.thunkname{fcnNum}='doublevoidPtrThunk';fcns.name{fcnNum}='_M_rtoc'; fcns.alias{fcnNum}='M_rtoc'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'longPtr'};fcnNum=fcnNum+1;
% void _stdcall _M_tic ( long * a ); 
fcns.thunkname{fcnNum}='voidvoidPtrThunk';fcns.name{fcnNum}='_M_tic'; fcns.alias{fcnNum}='M_tic'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'longPtr'};fcnNum=fcnNum+1;
methodinfo=fcns;